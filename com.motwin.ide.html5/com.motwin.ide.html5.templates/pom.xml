<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <parent>
    <groupId>com.motwin.ide.html5</groupId>
    <artifactId>com.motwin.ide.html5.parent</artifactId>
    <version>3.3.1.RELEASE</version>
  </parent>
  
  <artifactId>com.motwin.ide.html5.templates</artifactId>
  <packaging>eclipse-plugin</packaging>
  
  <properties>
    <template.directory>templates</template.directory>
    <sample.libs.dir>${project.build.directory}/samples-libs</sample.libs.dir>
    
    <empty.project.directory>${template.directory}/emptyProject</empty.project.directory>
    <hello1.sample.directory>${template.directory}/hello1</hello1.sample.directory>
    <hello2.sample.directory>${template.directory}/hello2</hello2.sample.directory>
    <rssreader.sample.directory>${template.directory}/rssreader</rssreader.sample.directory>
    <realtimepush.sample.directory>${template.directory}/realtimepush</realtimepush.sample.directory>
    <cordova.ios.template.directory>${template.directory}/cordovaIOS</cordova.ios.template.directory>
    <cordova.android.template.directory>${template.directory}/cordovaAndroid</cordova.android.template.directory>
  </properties>
  
  <build>
    <resources>
       <resource>
         <directory>${template.directory}</directory>
         <targetPath>${template.directory}</targetPath>
         <filtering>false</filtering>
         <includes>
           <include>**</include>
         </includes>
      </resource>
    </resources>
  
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${template.directory}</directory>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <!--  unpack  specific sample content -->
                <artifactItem>
                  <groupId>com.motwin.html5</groupId>
                  <artifactId>empty-project</artifactId>
                  <version>${html5.empty.project.version}</version>
                  <classifier>sample</classifier>
                  <type>zip</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${empty.project.directory}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>com.motwin.html5</groupId>
                  <artifactId>helloworld1-sample</artifactId>
                  <version>${html5.helloworld1.sample.version}</version>
                  <classifier>sample</classifier>
                  <type>zip</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${hello1.sample.directory}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>com.motwin.html5</groupId>
                  <artifactId>helloworld2-sample</artifactId>
                  <version>${html5.helloworld2.sample.version}</version>
                  <classifier>sample</classifier>
                  <type>zip</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${hello2.sample.directory}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>com.motwin.html5</groupId>
                  <artifactId>realtimepush-sample</artifactId>
                  <version>${html5.realtimepush.sample.version}</version>
                  <classifier>sample</classifier>
                  <type>zip</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${realtimepush.sample.directory}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>com.motwin.html5</groupId>
                  <artifactId>rssreader-sample</artifactId>
                  <version>${html5.rssreader.sample.version}</version>
                  <classifier>sample</classifier>
                  <type>zip</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${rssreader.sample.directory}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>com.motwin.html5</groupId>
                  <artifactId>cordova-ios-template</artifactId>
                  <version>${html5.cordova.ios.template.version}</version>
                  <classifier>sample</classifier>
                  <type>zip</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${cordova.ios.template.directory}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>com.motwin.html5</groupId>
                  <artifactId>cordova-android-template</artifactId>
                  <version>${html5.cordova.android.template.version}</version>
                  <classifier>sample</classifier>
                  <type>zip</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${cordova.android.template.directory}</outputDirectory>
                </artifactItem>
                
                <!--  unpack others commons dependencies -->
                <artifactItem>
                  <groupId>com.motwin.javascript</groupId>
                  <artifactId>javascript-sdk</artifactId>
                  <version>${html5.javascript.sdk.version}</version>
                  <type>zip</type>
                  <outputDirectory>${sample.libs.dir}/javascripts</outputDirectory>
                  <overWrite>true</overWrite>
                  <includes>*-min.js,ddr-ecma*.js,json*.js,sockjs*.js</includes>
                </artifactItem>
                <artifactItem>
                  <groupId>com.motwin.javascript</groupId>
                  <artifactId>javascript-extensions</artifactId>
                  <version>${html5.javascript.extensions.version}</version>
                  <type>zip</type>
                  <outputDirectory>${sample.libs.dir}/javascripts</outputDirectory>
                  <overWrite>true</overWrite>
                  <includes>*.js</includes>
                </artifactItem>
                <artifactItem>
                  <groupId>com.motwin.html5</groupId>
                  <artifactId>jquery-dependencies</artifactId>
                  <version>${jquery.dependencies.version}</version>
                  <type>zip</type>
                  <outputDirectory>${sample.libs.dir}</outputDirectory>
                  <overWrite>true</overWrite>
                  <includes>**/*.*</includes>
                </artifactItem>
                
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <!-- Use Ant to remove version/classifier from the CSS/JS files -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>rename-files</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <move todir="${sample.libs.dir}">
                  <fileset dir="${sample.libs.dir}">
                    <include name="**/*.js" />
                    <include name="**/*.css" />
                  </fileset>
                  <mapper type="regexp" from="(.*)-[\d\.]+(.[^\.]*)?\.([^\.]*)" to="\1.\3" />
                </move>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <!-- copy libs to each projects -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <resources>          
            <resource>
              <directory>${sample.libs.dir}</directory>
              <filtering>false</filtering>
            </resource>
          </resources>    
        </configuration>
        <executions>
          <execution>
            <id>copy-libs-for-helloworld1-sample</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${hello1.sample.directory}/www/libs</outputDirectory>
            </configuration>            
          </execution>
          <execution>
            <id>copy-libs-for-helloworld2-sample</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${hello2.sample.directory}/www/libs</outputDirectory>
            </configuration>            
          </execution>
          <execution>
            <id>copy-libs-for-realtimepush-sample</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${realtimepush.sample.directory}/www/libs</outputDirectory>
              <resources>
                <resource>
                  <excludes>
                    <exclude>**/*knockout*</exclude>
                    <exclude>**/*mobile*</exclude>
                    <exclude>**/*ui*</exclude>
                    <exclude>spreadsheets/**</exclude>
                  </excludes>
                </resource>
              </resources>
            </configuration>            
          </execution>
          <execution>
            <id>copy-libs-for-empty-project</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${empty.project.directory}/www/libs</outputDirectory>
              <resources>
                <resource>
                  <includes>
                    <include>javascripts/*ecma*</include>
                    <include>javascripts/*json*</include>
                    <include>javascripts/*motwin*</include>
                    <include>javascripts/*sockjs*</include>
                  </includes>
                </resource>
              </resources>
            </configuration>            
          </execution>
          <execution>
            <id>copy-libs-for-rssreader-sample</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${rssreader.sample.directory}/www/libs</outputDirectory>
            </configuration>            
          </execution>
        </executions>
      </plugin>

    </plugins>
    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-scm-plugin</artifactId>
                    <versionRange>[1.8,)</versionRange>
                    <goals>
                      <goal>export</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <versionRange>[1.7,)</versionRange>
                    <goals>
                      <goal>run</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  
</project>