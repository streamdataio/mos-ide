<?xml version="1.0" encoding="UTF-8"?>
<cheatsheet
      title="Create a new Motwin Channel Interceptor">
   <intro>
      <description>
      This cheat sheet shows you how to create a simple Motwin Channel Interceptor.
<br/><br/>
Pre-requisites:
<br/>- having a Motwin server application project created
<br/>- having a Spring beans definition file with the Motwin namespaces declared. Such a file is created thanks to the New Motwin Server project wizard.  
<br/><br/>
Make sure you use the <b>exact values</b> indicated in the cheat sheet scenario. Otherwise, you may not be able to use automatic actions provided in the cheat sheet.
<br/><br/>
Don&apos;t forget to check off each step before going to the next one. 
      </description>
   </intro>
   <item
         title="Open the Spring Bean Definition file">
      <description>
         Open the Spring Bean Definition file (by default, the one generated with the New Motwin Server Project is named <b>application.xml</b>) with the Spring Config Editor (usually, just open the file with Eclipse).
         <br/>This opens an editor with several tabs:
         <br/>- Source
         <br/>- Namespaces
         <br/>- Overview
         <br/>- beans
         <br/>- <b>Motwin Channel</b>
         <br/>- Motwin Messaging
         <br/>- Motwin Requesting
         <br/>- ...
      </description>
   </item>
   <item
         title="Select the Motwin Channel tab">
      <description>
      </description>
   </item>
   <item title="Click the New Interceptor button">
   	  <description>
   	  	Click the <b>&quot;New Interceptor&quot;</b> button: this opens a form to create a new Channel Interceptor.
   	  </description>
   </item>
   <item title="Click on the hyperlink class" dialog="true">
   	  <description>
   	  	Click the <b>&quot;class&quot;</b> link and fill in the wizard to create a new channel interceptor.
   	  </description>
   	  <onCompletion>
   	  That's it, you've created a Channel Interceptor!
   	  <br/> 
   	  <br/>Implement <b>interceptUpStreamChannelEvent</b> method to handle an upstream event (from remote device to server) and <b>interceptDownStreamChannelEvent</b> method to handle downstream events (from server to remote device).
   	  <br/> 
   	  <br/>There are 3 types of channel events : 
   	  <br/>- StateEvent : the state of the application session changed
   	  <br/>- ConnectionEvent : the state of the network link changed
   	  <br/>- MessageEvent : an upstream Message from the remote device
   	  </onCompletion>
   	  <subitem label="Enter a package name or select an existing one">
   	  </subitem>
   	  <subitem label="Enter the class name of the Channel Interceptor (for instance, &quot;MyChannelInterceptor&quot;)">
   	  </subitem>
   	  <subitem label="Click &quot;Finish&quot;.">
   	  </subitem>
   </item>
</cheatsheet>